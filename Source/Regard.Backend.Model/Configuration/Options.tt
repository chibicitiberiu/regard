<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Microsoft.VisualBasic.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="Microsoft.VisualBasic.FileIO" #>
<#@ output extension=".cs" #>
/* THIS FILE IS AUTOGENERATED DO NOT EDIT
 *
 * This file is autogenerated from Options.csv. 
 * If you want to add a new user interface coordinate 
 * do so in the CSV file then rebuild.
 */
using Regard.Model;

namespace Regard.Backend.Configuration
{
    public static class Options
    {
<#
    var path = Host.ResolvePath(string.Empty);
    var optionsFile = Path.Combine(path, "Options.csv");

    using (TextFieldParser parser = new TextFieldParser(optionsFile))
    {
        parser.TextFieldType = FieldType.Delimited;
        parser.SetDelimiters(",");

        // Skip headers
        string[] fields = parser.ReadFields();

        while (!parser.EndOfData)
        {
            fields = parser.ReadFields();

            var flags = new List<string>();

            if (!string.IsNullOrEmpty(fields[7]))
                flags.Add("OptionFlags.User");

            if (!string.IsNullOrEmpty(fields[8]))
                flags.Add("OptionFlags.SubscriptionFolder");

            if (!string.IsNullOrEmpty(fields[9]))
                flags.Add("OptionFlags.Subscription");

            if (flags.Count == 0)
                flags.Add("0");

            var flagsStr = string.Join(" | ", flags);
#>
        /// <summary>
        /// <#= fields[1] #>
        /// </summary>
        public static readonly OptionDefinition<<#= fields[2] #>> <#= fields[0] #> = new OptionDefinition<<#= fields[2] #>>(
            <#= fields[3] #>,
            <#= string.IsNullOrEmpty(fields[4]) ? "null" : $"\"{fields[4]}\"" #>,
            <#= string.IsNullOrEmpty(fields[5]) ? "null" : $"\"{fields[5]}\"" #>,
            <#= string.IsNullOrEmpty(fields[6]) ? "null" : $"\"{fields[6]}\"" #>,
            <#= flagsStr #>
        );

<#
        }
    }
#>
    }
}