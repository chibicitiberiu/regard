@typeparam Model

<div class="tree-view">
    <ul class="tree-item-children">
        @foreach (var child in Root.Children)
        {
            @BuildTreeItem(child);
        }
    </ul>
</div>


@code {
    private RenderFragment BuildTreeItem(TreeViewNode<Model> item)
    {
        return __builder =>
        {
            <li class="tree-item @item.CssClasses">
                <div class="tree-item-row">
                    <a href="#" class="tree-item-expand-button @CssUtils.BoolToClass(item.Children.Count == 0, "v-hidden")" @onclick="() => OnExpandToggle(item)">
                        <Icon Glyph="Icons.ChevronDown" Class="tree-item-expand-icon" />
                    </a>
                    <a href="#" class="tree-item-content" @onclick="() => OnItemClicked(item)">@ItemTemplate(item)</a>
                </div>
                @if (item.IsExpanded)
                {
                    <ul class="tree-item-children">
                        @foreach (var child in item.Children)
                        {
                            @BuildTreeItem(child)
                        }
                    </ul>
                }
            </li>
        };
    }
}